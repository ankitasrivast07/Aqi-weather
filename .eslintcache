[{"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/index.js":"1","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/App.js":"2","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/serviceWorker.js":"3","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/useAqiApi.js":"4","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/AllApi.js":"5","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/TownList.js":"6","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/NoData.js":"7","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/TownAqi.js":"8"},{"size":510,"mtime":1607062782851,"results":"9","hashOfConfig":"10"},{"size":5101,"mtime":1607362733858,"results":"11","hashOfConfig":"10"},{"size":5003,"mtime":1607062357209,"results":"12","hashOfConfig":"10"},{"size":850,"mtime":1607352137142,"results":"13","hashOfConfig":"10"},{"size":326,"mtime":1607352080330,"results":"14","hashOfConfig":"10"},{"size":712,"mtime":1607352325026,"results":"15","hashOfConfig":"10"},{"size":271,"mtime":1607352259794,"results":"16","hashOfConfig":"10"},{"size":1480,"mtime":1607352310169,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3rbs16",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/index.js",[],["36","37"],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/App.js",["38","39","40"],"import React, { useState,  useRef } from 'react';\nimport { useAQIAPIs } from './useAqiApi';\n\nimport { TOKEN, SEARCH_CITIES_BASE_URL, api } from './AllApi';\n\nimport CityAQIList from './TownList';\nimport './App.css';\n\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [url, setUrl] = useState('');\n  const [cities , loading, initial, error] = useAQIAPIs(url);\n  const [searchText, setSearchText] = useState('');\n  const searchInput = useRef(null);\n\n\n  const searchCityName = (event) => {\n      event.preventDefault();\n      setUrl(`${SEARCH_CITIES_BASE_URL}?token=${TOKEN}&keyword=${weather.name}`);\n  }\n\n  const handleSearchTextChange = (event) => {\n      setSearchText(event.target.value);\n  }\n  const search = evt => {\n    if (evt.key === \"Enter\" ) {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      \n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n        \n    }\n  }\n\n\n\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  \n  \n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app') : 'app warm'}>\n       {/* <div className={(( weather.weather[].main === \"Clouds\") ? 'app rain' : 'app warm')} > */}\n\n      <main>\n        \n      <div id=\"cover\" >\n      \n        <div class=\"tb \">\n        <div class=\"td\">\n          <input \n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          /></div>\n           <div class=\"td\" id=\"s-cover\">\n       <button type=\"submit\"  >\n         <div id=\"s-circle\"></div>\n         <span></span>\n       </button>\n     </div>\n             \n          \n          </div>\n        \n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n       \n            <div className=\"container mtop\">\n          <div className=\"row\">\n<div className=\"col-md-12\">\n  <div className=\"card he1\">\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n      <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n          <div className=\"location1\">{dateBuilder(new Date())}</div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"temp\">\n              {Math.round(weather.main.temp)}Â°c\n            </div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"weather\">{weather.weather[0].main}</div>\n      <img className=\"img3\" src=\"https://manage-website.s3.amazonaws.com/436ca560-df6d-444e-94fa-ce448eb36f20weather1.png\"/>\n    \n      </div>\n    </div>\n  </div>\n</div>\n<div className=\"col-md-12\">\n  <div className=\"card he1\">\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n      <div className=\"location\">Sunrise {new Date(weather.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5)} AM </div>\n        <img className=\"img1\" src=\"https://manage-website.s3.amazonaws.com/9022bbec-5d7b-4152-bd15-3c3a7baf49achalf-sun.png\"/>\n    \n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"location\">\n             Wind: {weather.wind.speed}Km/hr\n            </div>\n          <div className=\"location1\">Humidity: {weather.main.humidity}% </div>\n\n      </div>\n      <div className=\"col-md-4\">\n          <div className=\"location\">Sunset {new Date(weather.sys.sunset * 1000).toLocaleTimeString().slice(0, 5)} PM</div>\n          <img className=\"img2\" src=\"https://manage-website.s3.amazonaws.com/fe00ac73-9f13-4d1d-acb0-a0126f435b82sunset1.png\"/>\n    \n      </div>\n    </div>\n  </div>\n</div>\n</div>\n          </div>\n\n            <div className=\"App\">\n   \n         \n      <div>\n        \n            { error }\n           \n            <form onSubmit={ e => searchCityName(e)}>\n                <label className=\"nothing\">\n               \n                <input \n                \n                    type=\"text\" \n                    ref={ searchInput }\n                    value={ searchText } \n                    placeholder= \"\"\n                    onChange={ e => handleSearchTextChange(e) }\n                   />\n                </label>\n              \n                <input type=\"submit\" value=\"Want to Know AQI of your city\" />\n            </form>\n           \n            {\n                loading ?\n                    (<span>loading...</span>)\n                    :\n                    !initial && (<CityAQIList data={ cities.data }/>)\n            }\n        </div>\n    </div>\n          </div>\n       \n        ) : ('')}\n      </main>\n      </div>\n    // </div>\n  );\n\n\n\n}\n\nexport default App;\n\n","/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/serviceWorker.js",[],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/useAqiApi.js",[],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/AllApi.js",[],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/TownList.js",[],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/NoData.js",[],"/home/ankita/Desktop/CurrentProject/weather/weather-aqi-app/src/TownAqi.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":105,"column":7,"nodeType":"47","endLine":105,"endColumn":125},{"ruleId":"45","severity":1,"message":"46","line":116,"column":9,"nodeType":"47","endLine":116,"endColumn":127},{"ruleId":"45","severity":1,"message":"46","line":128,"column":11,"nodeType":"47","endLine":128,"endColumn":128},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]